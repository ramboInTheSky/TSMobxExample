// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ManageCustomAccess /> handles API errors 1`] = `
<ManageCustomAccess
  lockGroups={
    Object {
      "data": Array [
        Object {
          "id": "123-123-123-123",
          "name": "1.11",
          "notes": "this is just a room",
          "type": "room 11",
        },
        Object {
          "id": "123-123-123-123",
          "name": "1.12",
          "notes": "this is the best room",
          "type": "room 12",
        },
        Object {
          "id": "123-123-123-123",
          "name": "1.13",
          "notes": "this is just a room",
          "type": "room 13",
        },
        Object {
          "id": "123-123-123-123",
          "name": "1.14",
          "notes": "this is just a room",
          "type": "room 14",
        },
        Object {
          "id": "123-123-123-123",
          "name": "1.15",
          "notes": "this is just a room",
          "type": "room 15",
        },
        Object {
          "id": "123-123-123-123",
          "name": "1.16",
          "notes": "this is just a room",
          "type": "room 16",
        },
        Object {
          "id": "123-123-123-123",
          "name": "1.17",
          "notes": "this is an unlucky room",
          "type": "room 17",
        },
      ],
      "detail": LockGroup {
        "id": "",
        "name": "",
        "notes": "",
        "selected": false,
        "type": "Room",
      },
      "getList": [MockFunction],
      "isError": true,
      "item": [Function],
      "items": Array [],
    }
  }
  match={
    Object {
      "params": Object {
        "profileId": "123",
        "visitId": "456",
      },
    }
  }
  profiles={
    ProfilesMock {
      "getDetail": [MockFunction],
      "getList": [MockFunction],
      "isError": false,
      "isLoading": false,
      "item": Object {
        "company": "test 123",
        "created": "2019-04-16T12:03:37.493156",
        "emailAddress": "dsg@dsf.com",
        "firstName": "Clark",
        "id": "1aa657bc-d556-4643-a68f-af46f1bdba89",
        "lastName": "Kent",
        "mobileNumber": "01234567890",
        "notes": "fdsdfsfs",
        "visits": Array [
          Object {
            "archetypeIds": Array [],
            "fromDate": "2015-03-23T11:00:00Z",
            "id": "d3aa88e2-c754-41e0-8ba6-4198a34aa0a2",
            "lockGroups": Array [
              "Default",
              "Boiler",
              "1.11",
            ],
            "tags": Array [
              "123123",
              "234234",
              "345345",
            ],
            "toDate": "2015-11-25T12:00:00Z",
          },
        ],
      },
      "items": Array [
        Object {
          "company": "test 123",
          "created": "2019-04-16T12:03:37.493156",
          "emailAddress": "dsg@dsf.com",
          "firstName": "Clark",
          "id": "1aa657bc-d556-4643-a68f-af46f1bdba89",
          "lastName": "Kent",
          "mobileNumber": "01234567890",
          "notes": "fdsdfsfs",
          "visits": Array [
            Object {
              "archetypeIds": Array [],
              "fromDate": "2015-03-23T11:00:00Z",
              "id": "d3aa88e2-c754-41e0-8ba6-4198a34aa0a2",
              "lockGroups": Array [
                "Default",
                "Boiler",
                "1.11",
              ],
              "tags": Array [
                "123123",
                "234234",
                "345345",
              ],
              "toDate": "2015-11-25T12:00:00Z",
            },
          ],
        },
      ],
    }
  }
  routing={
    RoutingMock {
      "breadcrumb": Array [],
      "getBreadcrumb": [MockFunction],
      "go": [MockFunction],
      "goBack": [MockFunction],
      "goBackToPage": [MockFunction],
      "goForward": [MockFunction],
      "goToPage": [MockFunction],
      "history": Object {},
      "location": Object {},
      "push": [MockFunction],
      "replace": [MockFunction],
      "splitThings": [MockFunction],
    }
  }
  visits={
    VisitsMock {
      "addTag": [Function],
      "archetypes": Object {
        "primary": Array [],
        "secondary": Array [],
      },
      "clearErrors": [MockFunction],
      "detail": Visit {
        "archetypeIds": Array [],
        "fromDate": "",
        "id": "",
        "lockGroups": Array [],
        "tags": Array [],
        "toDate": "",
      },
      "getArchetypes": [MockFunction],
      "item": [Function],
      "simulateValidationError": [Function],
      "validationError": undefined,
    }
  }
/>
`;

exports[`<ManageCustomAccess /> renders correctly 1`] = `
<ManageCustomAccess
  lockGroups={
    LockGroupMock {
      "data": Array [
        Object {
          "id": "123-123-123-123",
          "name": "1.11",
          "notes": "this is just a room",
          "type": "room 11",
        },
        Object {
          "id": "123-123-123-123",
          "name": "1.12",
          "notes": "this is the best room",
          "type": "room 12",
        },
        Object {
          "id": "123-123-123-123",
          "name": "1.13",
          "notes": "this is just a room",
          "type": "room 13",
        },
        Object {
          "id": "123-123-123-123",
          "name": "1.14",
          "notes": "this is just a room",
          "type": "room 14",
        },
        Object {
          "id": "123-123-123-123",
          "name": "1.15",
          "notes": "this is just a room",
          "type": "room 15",
        },
        Object {
          "id": "123-123-123-123",
          "name": "1.16",
          "notes": "this is just a room",
          "type": "room 16",
        },
        Object {
          "id": "123-123-123-123",
          "name": "1.17",
          "notes": "this is an unlucky room",
          "type": "room 17",
        },
      ],
      "detail": LockGroup {
        "id": "",
        "name": "",
        "notes": "",
        "selected": false,
        "type": "Room",
      },
      "getList": [MockFunction],
      "item": [Function],
      "items": Array [],
    }
  }
  match={
    Object {
      "params": Object {
        "profileId": "123",
        "visitId": "456",
      },
    }
  }
  profiles={
    ProfilesMock {
      "getDetail": [MockFunction],
      "getList": [MockFunction],
      "isError": false,
      "isLoading": false,
      "item": Object {
        "company": "test 123",
        "created": "2019-04-16T12:03:37.493156",
        "emailAddress": "dsg@dsf.com",
        "firstName": "Clark",
        "id": "1aa657bc-d556-4643-a68f-af46f1bdba89",
        "lastName": "Kent",
        "mobileNumber": "01234567890",
        "notes": "fdsdfsfs",
        "visits": Array [
          Object {
            "archetypeIds": Array [],
            "fromDate": "2015-03-23T11:00:00Z",
            "id": "d3aa88e2-c754-41e0-8ba6-4198a34aa0a2",
            "lockGroups": Array [
              "Default",
              "Boiler",
              "1.11",
            ],
            "tags": Array [
              "123123",
              "234234",
              "345345",
            ],
            "toDate": "2015-11-25T12:00:00Z",
          },
        ],
      },
      "items": Array [
        Object {
          "company": "test 123",
          "created": "2019-04-16T12:03:37.493156",
          "emailAddress": "dsg@dsf.com",
          "firstName": "Clark",
          "id": "1aa657bc-d556-4643-a68f-af46f1bdba89",
          "lastName": "Kent",
          "mobileNumber": "01234567890",
          "notes": "fdsdfsfs",
          "visits": Array [
            Object {
              "archetypeIds": Array [],
              "fromDate": "2015-03-23T11:00:00Z",
              "id": "d3aa88e2-c754-41e0-8ba6-4198a34aa0a2",
              "lockGroups": Array [
                "Default",
                "Boiler",
                "1.11",
              ],
              "tags": Array [
                "123123",
                "234234",
                "345345",
              ],
              "toDate": "2015-11-25T12:00:00Z",
            },
          ],
        },
      ],
    }
  }
  routing={
    RoutingMock {
      "breadcrumb": Array [],
      "getBreadcrumb": [MockFunction],
      "go": [MockFunction],
      "goBack": [MockFunction],
      "goBackToPage": [MockFunction],
      "goForward": [MockFunction],
      "goToPage": [MockFunction],
      "history": Object {},
      "location": Object {},
      "push": [MockFunction],
      "replace": [MockFunction],
      "splitThings": [MockFunction],
    }
  }
  visits={
    VisitsMock {
      "addTag": [Function],
      "archetypes": Object {
        "primary": Array [],
        "secondary": Array [],
      },
      "clearErrors": [MockFunction],
      "detail": Visit {
        "archetypeIds": Array [],
        "fromDate": "",
        "id": "",
        "lockGroups": Array [],
        "tags": Array [],
        "toDate": "",
      },
      "getArchetypes": [MockFunction],
      "item": [Function],
      "simulateValidationError": [Function],
      "validationError": undefined,
    }
  }
/>
`;

exports[`<ManageCustomAccess /> renders correctly when data is loading 1`] = `
<ManageCustomAccess
  lockGroups={
    Object {
      "data": Array [
        Object {
          "id": "123-123-123-123",
          "name": "1.11",
          "notes": "this is just a room",
          "type": "room 11",
        },
        Object {
          "id": "123-123-123-123",
          "name": "1.12",
          "notes": "this is the best room",
          "type": "room 12",
        },
        Object {
          "id": "123-123-123-123",
          "name": "1.13",
          "notes": "this is just a room",
          "type": "room 13",
        },
        Object {
          "id": "123-123-123-123",
          "name": "1.14",
          "notes": "this is just a room",
          "type": "room 14",
        },
        Object {
          "id": "123-123-123-123",
          "name": "1.15",
          "notes": "this is just a room",
          "type": "room 15",
        },
        Object {
          "id": "123-123-123-123",
          "name": "1.16",
          "notes": "this is just a room",
          "type": "room 16",
        },
        Object {
          "id": "123-123-123-123",
          "name": "1.17",
          "notes": "this is an unlucky room",
          "type": "room 17",
        },
      ],
      "detail": LockGroup {
        "id": "",
        "name": "",
        "notes": "",
        "selected": false,
        "type": "Room",
      },
      "getList": [MockFunction],
      "item": [Function],
      "items": Array [],
      "loading": true,
    }
  }
  match={
    Object {
      "params": Object {
        "profileId": "123",
        "visitId": "456",
      },
    }
  }
  profiles={
    ProfilesMock {
      "getDetail": [MockFunction],
      "getList": [MockFunction],
      "isError": false,
      "isLoading": false,
      "item": Object {
        "company": "test 123",
        "created": "2019-04-16T12:03:37.493156",
        "emailAddress": "dsg@dsf.com",
        "firstName": "Clark",
        "id": "1aa657bc-d556-4643-a68f-af46f1bdba89",
        "lastName": "Kent",
        "mobileNumber": "01234567890",
        "notes": "fdsdfsfs",
        "visits": Array [
          Object {
            "archetypeIds": Array [],
            "fromDate": "2015-03-23T11:00:00Z",
            "id": "d3aa88e2-c754-41e0-8ba6-4198a34aa0a2",
            "lockGroups": Array [
              "Default",
              "Boiler",
              "1.11",
            ],
            "tags": Array [
              "123123",
              "234234",
              "345345",
            ],
            "toDate": "2015-11-25T12:00:00Z",
          },
        ],
      },
      "items": Array [
        Object {
          "company": "test 123",
          "created": "2019-04-16T12:03:37.493156",
          "emailAddress": "dsg@dsf.com",
          "firstName": "Clark",
          "id": "1aa657bc-d556-4643-a68f-af46f1bdba89",
          "lastName": "Kent",
          "mobileNumber": "01234567890",
          "notes": "fdsdfsfs",
          "visits": Array [
            Object {
              "archetypeIds": Array [],
              "fromDate": "2015-03-23T11:00:00Z",
              "id": "d3aa88e2-c754-41e0-8ba6-4198a34aa0a2",
              "lockGroups": Array [
                "Default",
                "Boiler",
                "1.11",
              ],
              "tags": Array [
                "123123",
                "234234",
                "345345",
              ],
              "toDate": "2015-11-25T12:00:00Z",
            },
          ],
        },
      ],
    }
  }
  routing={
    RoutingMock {
      "breadcrumb": Array [],
      "getBreadcrumb": [MockFunction],
      "go": [MockFunction],
      "goBack": [MockFunction],
      "goBackToPage": [MockFunction],
      "goForward": [MockFunction],
      "goToPage": [MockFunction],
      "history": Object {},
      "location": Object {},
      "push": [MockFunction],
      "replace": [MockFunction],
      "splitThings": [MockFunction],
    }
  }
  visits={
    VisitsMock {
      "addTag": [Function],
      "archetypes": Object {
        "primary": Array [],
        "secondary": Array [],
      },
      "clearErrors": [MockFunction],
      "detail": Visit {
        "archetypeIds": Array [],
        "fromDate": "",
        "id": "",
        "lockGroups": Array [],
        "tags": Array [],
        "toDate": "",
      },
      "getArchetypes": [MockFunction],
      "item": [Function],
      "simulateValidationError": [Function],
      "validationError": undefined,
    }
  }
/>
`;

exports[`<ManageCustomAccess /> renders correctly with data 1`] = `
<ManageCustomAccess
  lockGroups={
    Object {
      "data": Array [
        Object {
          "id": "123-123-123-123",
          "name": "1.11",
          "notes": "this is just a room",
          "type": "room 11",
        },
        Object {
          "id": "123-123-123-123",
          "name": "1.12",
          "notes": "this is the best room",
          "type": "room 12",
        },
        Object {
          "id": "123-123-123-123",
          "name": "1.13",
          "notes": "this is just a room",
          "type": "room 13",
        },
        Object {
          "id": "123-123-123-123",
          "name": "1.14",
          "notes": "this is just a room",
          "type": "room 14",
        },
        Object {
          "id": "123-123-123-123",
          "name": "1.15",
          "notes": "this is just a room",
          "type": "room 15",
        },
        Object {
          "id": "123-123-123-123",
          "name": "1.16",
          "notes": "this is just a room",
          "type": "room 16",
        },
        Object {
          "id": "123-123-123-123",
          "name": "1.17",
          "notes": "this is an unlucky room",
          "type": "room 17",
        },
      ],
      "detail": LockGroup {
        "id": "",
        "name": "",
        "notes": "",
        "selected": false,
        "type": "Room",
      },
      "getList": [MockFunction],
      "item": [Function],
      "items": Array [],
    }
  }
  match={
    Object {
      "params": Object {
        "profileId": "123",
        "visitId": "456",
      },
    }
  }
  profiles={
    ProfilesMock {
      "getDetail": [MockFunction],
      "getList": [MockFunction],
      "isError": false,
      "isLoading": false,
      "item": Object {
        "company": "test 123",
        "created": "2019-04-16T12:03:37.493156",
        "emailAddress": "dsg@dsf.com",
        "firstName": "Clark",
        "id": "1aa657bc-d556-4643-a68f-af46f1bdba89",
        "lastName": "Kent",
        "mobileNumber": "01234567890",
        "notes": "fdsdfsfs",
        "visits": Array [
          Object {
            "archetypeIds": Array [],
            "fromDate": "2015-03-23T11:00:00Z",
            "id": "d3aa88e2-c754-41e0-8ba6-4198a34aa0a2",
            "lockGroups": Array [
              "Default",
              "Boiler",
              "1.11",
            ],
            "tags": Array [
              "123123",
              "234234",
              "345345",
            ],
            "toDate": "2015-11-25T12:00:00Z",
          },
        ],
      },
      "items": Array [
        Object {
          "company": "test 123",
          "created": "2019-04-16T12:03:37.493156",
          "emailAddress": "dsg@dsf.com",
          "firstName": "Clark",
          "id": "1aa657bc-d556-4643-a68f-af46f1bdba89",
          "lastName": "Kent",
          "mobileNumber": "01234567890",
          "notes": "fdsdfsfs",
          "visits": Array [
            Object {
              "archetypeIds": Array [],
              "fromDate": "2015-03-23T11:00:00Z",
              "id": "d3aa88e2-c754-41e0-8ba6-4198a34aa0a2",
              "lockGroups": Array [
                "Default",
                "Boiler",
                "1.11",
              ],
              "tags": Array [
                "123123",
                "234234",
                "345345",
              ],
              "toDate": "2015-11-25T12:00:00Z",
            },
          ],
        },
      ],
    }
  }
  routing={
    RoutingMock {
      "breadcrumb": Array [],
      "getBreadcrumb": [MockFunction],
      "go": [MockFunction],
      "goBack": [MockFunction],
      "goBackToPage": [MockFunction],
      "goForward": [MockFunction],
      "goToPage": [MockFunction],
      "history": Object {},
      "location": Object {},
      "push": [MockFunction],
      "replace": [MockFunction],
      "splitThings": [MockFunction],
    }
  }
  visits={
    VisitsMock {
      "addTag": [Function],
      "archetypes": Object {
        "primary": Array [],
        "secondary": Array [],
      },
      "clearErrors": [MockFunction],
      "detail": Visit {
        "archetypeIds": Array [],
        "fromDate": "",
        "id": "",
        "lockGroups": Array [],
        "tags": Array [],
        "toDate": "",
      },
      "getArchetypes": [MockFunction],
      "item": [Function],
      "simulateValidationError": [Function],
      "validationError": undefined,
    }
  }
/>
`;
